/* A020498.gp  -  (c) 2024 by MFH

oeis.org/A020498: a(n) is the least number > a(n-1) such that there is no prime p for which a(1) through a(n) would contain all residues modulo p.
= 1, 3, 7, 9, 13, 19, 21, 27, 31, 33, 37, 43, 49, 51, 57, 63, 69, 73, 79, 87, 91, 97, 99, 103, 111, 117, 121, 129, 133, 139, 141, 147, 153, 157, 159, 163, 169, 177, 183, 187, 189, 199, 201, 211, 213, 217, 231, 241, 243, 247, 253, 261, 267, 271, 273, 279, 283, 289

COMMENT:
For a given prime p, if r is the only residue (mod p) not among {a(1), ..., a(n)} (mod p) for some index n, then no term of the sequence can be congruent to r (mod p).
(Instead of a(1...n), one can consider any collection of terms.) - Examples:
(1) p = 2, r = 0, n = 1: No term can be congruent to 0 (mod 2), i.e., even.
(2) p = 3, r = 2, n = 2: No term may be congruent to 2 (mod 3).
(3) p = 5, r = 0, n = 4: No term may be a multiple of 5.
(4) p = 7, r = 4, n = 6: No term may be congruent to 4 (mod 7).
(5) p = 11, r = 6, n = 11: No term may be congruent to 6 (mod 11). - M. F. Hasler, Nov 25 2024
*/

\\ Simple "brute force" script:
(PARI)
upto(N, a=[1])={for(n=2, N, forstep(k=a[n-1]+2, oo, 2,
   forprime(p=3, n, #Set(concat(a, k)%p)==p && next(2)); a=concat(a, k); break)); a} \\ M. F. Hasler, Nov 25 2024

\\ More intelligent : check candidates k just against a list of "excluded residues".
/*
upto(99) \\ output from a preliminary "intelligent" version:
[3, 3][5, 5][7, 7][12, 11][15, 13][20, 17][38, 19][39, 23][54, 29][55, 31][58, 37][81, 41][82, 43]
==> we see that n grows much faster than p, and often, the nextprime()-excluded is completed in the very next step,
which might indicate that it "was already there before, so it should have been implemented before" !!

However, at least up to n = 199 this gives the same terms as the Brute-Force method.
Update: from n = 214 on, they differ.

TO DO : when "condition p" is implemented, double check whether "condition nextprime(p)" is not already satisfied!
*/

upto(N, debug=0, a=[1], x=[] /*excluded residues*/, q=3 /*modulus of least missing residue*/, Q=[]/*moduli ahead of q*/ )={
   my( r, find(r)=for(i=1, #r, r[i]==i && return(i)) );
   for(n=2, N, forprime(p=q, n, (p < q || setsearch(Q, p) /*already done*/ || #(r=Set(a%p)) < p-1) && next;
         if ( p > q, /*ahead of q*/ Q = setunion(Q, [p]), 
            /* increment q, remove from Q */ while( if(Q, Q[1]) == q = nextprime(q+1), Q = Q[^1] )/*end while*/ )/*end if*/; 
         x = concat(x, Mod(find(r)-1, p));
      )/*end forprime p*/;
      forstep ( k=a[n-1]+2, oo, 2, foreach(x, r, k==r && next(2)); a=concat(a,k); break)
    ); debug && print(x,q,Q); a} \\ _M. F. Hasler_, Nov 25 2024

/*
upto(299, debug=1) \\ 
[Mod(2, 3), Mod(0, 5), Mod(4, 7), Mod(6, 11), Mod(2, 13), Mod(8, 17), Mod(10, 19), Mod(12, 23), Mod(16, 31), Mod(26, 29), Mod(34, 37), Mod(14, 41), Mod(22, 43), Mod(24, 47), Mod(32, 53), Mod(30, 59), **Mod(34, 67)**, Mod(36, 73), Mod(42, 83), Mod(59, 89), **Mod(53, 61)**, **Mod(40, 79)**, Mod(14, 101), Mod(58, 109), **Mod(12, 97)**, Mod(30, 113)]71[73, 79, 83, 89, 97, 101, 109, 113]
time = 109 ms.
%437 = [1, 3, 7, 9, 13, 19, 21, 27, 31, 33, 37, 43, 49, 51, 57, 63, 69, 73, 79, 87, 91, 97, 99, 103, 111, 117, 121, 129, 133, 139, 141, 147, 153, 157, 159, 163, 169, 177, 183, 187, 189, 199, 201, 211, 213, 217, 231, 241, 243, 247, 253, 261, 267, 271, 273, 279, 283, 289, 307, 309, 313, 321, 337, 339, 343, 349, 351, 363, 373, 381, 387, 393, 397, 411, 421, 423, 427, 429, 439, 451, 453, 463, 469, 471, 477, 489, 493, 499, 507, 511, 513, 517, 531, 537, 549, 553, 559, 573, 579, 583, 591, 597, 601, 607, 609, 619, 621, 631, 643, 649, 651, 657, 661, 673, 681, 687, 703, 709, 723, 727, 733, 741, 747, 757, 759, 763, 777, 783, 799, 801, 813, 819, 829, 843, 849, 859, 861, 871, 877, 883, 889, 891, 901, 913, 927, 931, 937, 939, 961, 967, 969, 973, 981, 987, 993, 997, 999, 1009, 1021, 1023, 1027, 1053, 1057, 1059, 1063, 1069, 1071, 1077, 1083, 1087, 1111, 1119, 1123, 1129, 1137, 1141, 1143, 1149, 1153, 1167, 1171, 1177, 1179, 1189, 1191, 1197, 1209, 1213, 1219, 1221, 1233, 1239, 1261, 1267, 1279, 1281, 1291, 1297, 1303, 1309, 1311, 1333, 1339, 1347, 1353, 1363, 1371, 1377, 1399, 1401, 1407, 1413, 1417, 1429, 1431, 1437, 1443, 1459, 1479, 1489, 1501, 1503, 1519, 1533, 1539, 1543, 1561, 1567, 1573, 1581, 1591, 1603, 1609, 1611, 1617, 1629, 1633, 1641, 1647, 1651, 1671, 1681, 1683, 1687, 1707, 1713, 1717, 1723, 1729, 1743, 1749, 1753, 1767, 1771, 1779, 1791, 1797, 1801, 1807, 1813, 1819, 1833, 1837, 1849, 1851, 1863, 1867, 1869, 1879, 1881, 1893, 1897, 1899, 1903, 1917, 1923, 1927, 1947, 1959, 1981, 1983, 1987, 1989, 2001, 2011, 2029, 2037, 2047, 2053, 2061, 2067, 2071, 2073, 2077, 2079, 2089, 2091, 2101, 2103]
